{"remainingRequest":"/Users/peter/Desktop/SKOLA/GRUPPARBETE/Vue_Boilerplate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peter/Desktop/SKOLA/GRUPPARBETE/Vue_Boilerplate/src/components/TodoList.vue?vue&type=template&id=3de47834&scoped=true&","dependencies":[{"path":"/Users/peter/Desktop/SKOLA/GRUPPARBETE/Vue_Boilerplate/src/components/TodoList.vue","mtime":1547046114947},{"path":"/Users/peter/Desktop/SKOLA/GRUPPARBETE/Vue_Boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter/Desktop/SKOLA/GRUPPARBETE/Vue_Boilerplate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/peter/Desktop/SKOLA/GRUPPARBETE/Vue_Boilerplate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/peter/Desktop/SKOLA/GRUPPARBETE/Vue_Boilerplate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div class=\"holder col-8 col-lg-6 p-0\">\n    <!-- the @submit calls the method addItem on submit \n        .prevent blocks render, so animations can be played-->\n    <form @submit.prevent=\"addItem\">\n        <!-- v-bind:class can change class on variable condition -->\n        <input type=\"text\" autocomplete=\"off\" placeholder=\"Enter an item to add..\" v-model=\"item\" name=\"item\" v-bind:class=\"!items[0] ? 'shadow' : ''\">\n        <!-- transition is used when animating content with css -->\n        <transition name=\"alert-in\" enter-active-class=\"animated flipInX\" leave-active-class=\"animated flipOutX\">\n            <!-- this errors is generated by vee-validate, which is an imported component -->\n            <p class=\"alert\" v-if=\"validate\">{{ error }}</p>\n        </transition>\n    </form>\n    <!-- transition-group is used in conjunction with v-for -->\n    <transition-group tag=\"ul\" name=\"list\" enter-active-class=\"animated slideInUp\" leave-active-class=\"animated slideOutDown\">\n        <!-- for some reason transition-group won't work \n                unless key index is / 1, this is a known issue\n                v-for loops through items, and create a <li> for every item -->\n        <li v-for=\"(list, index) in items\" :key='index / 1'\n        class=\"d-flex align-items-center justify-content-between shadow\">\n            {{index + 1}}: {{ list.item }}\n            <i class=\"fa fa-minus-circle\" v-on:click=\"removeItem(index)\"></i>\n        </li>\n    </transition-group>\n</div>\n",null]}